import pygame 
def main(global_data):
    pygame.init()
    poloha_x =800
    notove = [[2, 40, (255, 0, 0)], [3, 48, (255, 0, 250)], [1, 52, (255, 0, 0)], [5, 59, (0, 0, 255)], [4, 68, (0, 0, 255)], [5, 71, (0, 0, 255)], [4, 76, (0, 0, 255)], [2, 80, (255, 0, 0)], [3, 92, (255, 0, 250)], [3, 132, (255, 0, 250)], [3, 161, (255, 0, 250)], [3, 175, (255, 0, 250)], [5, 188, (0, 0, 255)], [4, 195, (0, 0, 255)], [4, 202, (0, 0, 255)], [3, 212, (255, 0, 250)], [4, 226, (0, 0, 255)], [2, 240, (255, 0, 0)], [4, 252, (0, 0, 255)], [3, 269, (255, 0, 250)], [1, 282, (255, 0, 0)], [5, 297, (0, 0, 255)], [1, 302, (255, 0, 0)], [4, 308, (0, 0, 255)], [5, 313, (0, 0, 255)], [2, 318, (255, 0, 0)], [3, 324, (255, 0, 250)], [2, 339, (255, 0, 0)], [3, 357, (255, 0, 250)], [2, 371, (255, 0, 0)], [2, 385, (255, 0, 0)], [3, 397, (255, 0, 250)], [5, 411, (0, 0, 255)], [5, 419, (0, 0, 255)], [2, 431, (255, 0, 0)], [5, 438, (0, 0, 255)], [1, 444, (255, 0, 0)], [3, 458, (255, 0, 250)], [1, 473, (255, 0, 0)], [1, 486, (255, 0, 0)], [2, 501, (255, 0, 0)], [1, 512, (255, 0, 0)], [1, 525, (255, 0, 0)], [4, 531, (0, 0, 255)], [5, 541, (0, 0, 255)], [1, 546, (255, 0, 0)], [3, 567, (255, 0, 250)], [2, 586, (255, 0, 0)], [1, 590, (255, 0, 0)], [1, 606, (255, 0, 0)], [3, 620, (255, 0, 250)], [5, 633, (0, 0, 255)], [4, 646, (0, 0, 255)], [2, 671, (255, 0, 0)], [1, 682, (255, 0, 0)], [3, 692, (255, 0, 250)], [3, 703, (255, 0, 250)], [1, 720, (255, 0, 0)], [5, 735, (0, 0, 255)], [2, 758, (255, 0, 0)], [4, 771, (0, 0, 255)], [5, 796, (0, 0, 255)], [5, 816, (0, 0, 255)], [4, 831, (0, 0, 255)], [3, 849, (255, 0, 250)], [3, 863, (255, 0, 250)], [1, 880, (255, 0, 0)], [4, 895, (0, 0, 255)], [2, 909, (255, 0, 0)], [3, 938, (255, 0, 250)], [5, 954, (0, 0, 255)], [1, 967, (255, 0, 0)], [2, 980, (255, 0, 0)], [3, 996, (255, 0, 250)], [3, 1015, (255, 0, 250)], [4, 1030, (0, 0, 255)], [4, 1044, (0, 0, 255)], [5, 1057, (0, 0, 255)], [1, 1070, (255, 0, 0)], [5, 1083, (0, 0, 255)], [3, 1097, (255, 0, 250)], [4, 1112, (0, 0, 255)], [5, 1124, (0, 0, 255)], [3, 1133, (255, 0, 250)], [2, 1155, (255, 0, 0)], [2, 1172, (255, 0, 0)], [4, 1193, (0, 0, 255)], [1, 1209, (255, 0, 0)], [1, 1230, (255, 0, 0)], [2, 1249, (255, 0, 0)], [3, 1267, (255, 0, 250)], [5, 1286, (0, 0, 255)], [1, 1305, (255, 0, 0)], [1, 1325, (255, 0, 0)], [2, 1342, (255, 0, 0)], [1, 1355, (255, 0, 0)], [2, 1366, (255, 0, 0)], [5, 1399, (0, 0, 255)], [3, 1421, (255, 0, 250)], [3, 1443, (255, 0, 250)], [4, 1454, (0, 0, 255)], [5, 1465, (0, 0, 255)], [5, 1488, (0, 0, 255)], [5, 1509, (0, 0, 255)], [5, 1534, (0, 0, 255)], [2, 1543, (255, 0, 0)], [2, 1555, (255, 0, 0)], [3, 1580, (255, 0, 250)], [5, 1603, (0, 0, 255)], [5, 1633, (0, 0, 255)], [2, 1658, (255, 0, 0)], [3, 1676, (255, 0, 250)], [4, 1701, (0, 0, 255)], [1, 1723, (255, 0, 0)], [1, 1743, (255, 0, 0)], [4, 1752, (0, 0, 255)], [3, 1765, (255, 0, 250)], [5, 1789, (0, 0, 255)], [3, 1813, (255, 0, 250)], [5, 1835, (0, 0, 255)], [4, 1845, (0, 0, 255)], [3, 1857, (255, 0, 250)], [5, 1887, (0, 0, 255)], [2, 1908, (255, 0, 0)], [2, 1925, (255, 0, 0)], [1, 1937, (255, 0, 0)], [4, 1948, (0, 0, 255)], [3, 1970, (255, 0, 250)], [5, 1989, (0, 0, 255)], [2, 2021, (255, 0, 0)], [5, 2031, (0, 0, 255)], [4, 2043, (0, 0, 255)], [2, 2066, (255, 0, 0)], [3, 2090, (255, 0, 250)], [2, 2111, (255, 0, 0)], [5, 2121, (0, 0, 255)], [4, 2133, (0, 0, 255)], [3, 2155, (255, 0, 250)], [3, 2178, (255, 0, 250)], [3, 2199, (255, 0, 250)], [3, 2210, (255, 0, 250)], [2, 2221, (255, 0, 0)], [1, 2241, (255, 0, 0)], [1, 2279, (255, 0, 0)], [2, 2304, (255, 0, 0)], [1, 2316, (255, 0, 0)], [3, 2328, (255, 0, 250)], [3, 2352, (255, 0, 250)], [5, 2377, (0, 0, 255)], [3, 2400, (255, 0, 250)], [5, 2413, (0, 0, 255)], [1, 2426, (255, 0, 0)], [2, 2448, (255, 0, 0)], [4, 2478, (0, 0, 255)], [4, 2497, (0, 0, 255)], [3, 2508, (255, 0, 250)], [4, 2519, (0, 0, 255)], [1, 2545, (255, 0, 0)], [3, 2582, (255, 0, 250)], [3, 2604, (255, 0, 250)], [3, 2619, (255, 0, 250)], [3, 2633, (255, 0, 250)], [5, 2655, (0, 0, 255)], [5, 2673, (0, 0, 255)], [4, 2692, (0, 0, 255)], [1, 2702, (255, 0, 0)], [5, 2709, (0, 0, 255)], [2, 2717, (255, 0, 0)], [2, 2721, (255, 0, 0)], [1, 2727, (255, 0, 0)], [1, 2742, (255, 0, 0)], [3, 2754, (255, 0, 250)], [5, 2793, (0, 0, 255)], [3, 2816, (255, 0, 250)], [5, 2835, (0, 0, 255)], [5, 2850, (0, 0, 255)], [5, 2859, (0, 0, 255)], [1, 2877, (255, 0, 0)], [1, 2901, (255, 0, 0)], [2, 2926, (255, 0, 0)], [5, 2946, (0, 0, 255)], [5, 2956, (0, 0, 255)], [1, 2966, (255, 0, 0)], [2, 2971, (255, 0, 0)], [1, 2986, (255, 0, 0)], [1, 3002, (255, 0, 0)], [3, 3014, (255, 0, 250)], [5, 3039, (0, 0, 255)], [5, 3054, (0, 0, 255)], [2, 3069, (255, 0, 0)], [3, 3089, (255, 0, 250)], [2, 3105, (255, 0, 0)], [2, 3118, (255, 0, 0)], [2, 3137, (255, 0, 0)], [1, 3156, (255, 0, 0)], [5, 3169, (0, 0, 255)], [3, 3180, (255, 0, 250)], [5, 3202, (0, 0, 255)], [2, 3223, (255, 0, 0)], [1, 3244, (255, 0, 0)], [3, 3253, (255, 0, 250)], [4, 3262, (0, 0, 255)], [1, 3267, (255, 0, 0)], [2, 3273, (255, 0, 0)], [3, 3277, (255, 0, 250)], [4, 3283, (0, 0, 255)], [5, 3287, (0, 0, 255)], [1, 3294, (255, 0, 0)], [3, 3298, (255, 0, 250)]]


    ktera_nota = 1
    aktivni = 0
    aktivni_noty = []
    kdy = 0
    # Nastavení velikosti okna
    screen = pygame.display.set_mode((800, 600))
    pygame.display.set_caption("Pohyb obdélníků nad a pod středem")

  

    # Barvy
    b=255
    # Načtení obrázků
    modry = pygame.image.load("D:\\kraken\\projekt-1ep-absolvent\\source\\Martin_hudba_minihra\\bitmapa.png")
    cerveny = pygame.image.load("D:\\kraken\\projekt-1ep-absolvent\\source\\Martin_hudba_minihra\\bitmapa2.png")

    # Získání rectů
    modry_rect = modry.get_rect()
    cerveny_rect = cerveny.get_rect()

    # Nastavení počátečních pozic
    modry_rect.topleft = (10, (screen.get_height() // 2) - modry_rect.height)
    cerveny_rect.topleft = (10, (screen.get_height() // 2))
    skore=0
    noooooooooooooooooooooooooobe=0    # Rychlost pohybu
    move_speed = 5
    barva_pozadi = (255, 255, 255)
    # Hlavní smyčka hry
    running = True
    clock = pygame.time.Clock()
    while running:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    for n in aktivni_noty.copy():
                        nota_rect=n[0]  
                        if modry_rect.colliderect(nota_rect) or cerveny_rect.colliderect(nota_rect):
                            if n[2] !=(255,0,250): 
                                aktivni_noty.remove(n)
                                skore+=1
                        if modry_rect.colliderect(nota_rect) and cerveny_rect.colliderect(nota_rect):
                            if n[2] ==(255,0,250): 
                                aktivni_noty.remove(n)
                                skore+=1
                    b=150
        barva_pozadi = (b,b,b)
        if b<255:
            b+=3
        # Získání stavu klávesnice
        keys = pygame.key.get_pressed()

        # Pohyb modrého
        
        if keys[pygame.K_UP]:
            modry_rect.y -= move_speed
        if keys[pygame.K_DOWN]:
            modry_rect.y += move_speed

        # Pohyb červeného
        if keys[pygame.K_w]:
            cerveny_rect.y -= move_speed
        if keys[pygame.K_s]:
            cerveny_rect.y += move_speed

        kdy +=5

        if notove[ktera_nota][1]==kdy/5:
                aktivni = 1
          

        for i in range(aktivni):
                
                poloha_y = notove[ktera_nota][0]*100
                barva  = notove[ktera_nota][2]
                ktera_nota += 1
                nota=pygame.Rect(poloha_x,poloha_y,20,40)
                aktivni_noty.append([nota,aktivni,barva])
                aktivni = 0

        screen.fill(barva_pozadi)

        for o in aktivni_noty.copy():
            rect_nota = o[0]
            barva = o[2]
            rect_nota.x -= 5 
            
            pygame.draw.rect(screen, barva, rect_nota)
            if rect_nota.x+20 < 0:
                aktivni_noty.remove(o)
                noooooooooooooooooooooooooobe+=1  # Volitelně odstraníš notu mimo obrazovku

        # Omez pohyb na okno
        modry_rect.y = max(0, min(modry_rect.y, screen.get_height() - modry_rect.height))
        cerveny_rect.y = max(0, min(cerveny_rect.y, screen.get_height() - cerveny_rect.height))
        print(noooooooooooooooooooooooooobe)
        print(skore)
        print()
        # Vyplnění obrazovky

        # Vykreslení obrázků pomocí blit
        screen.blit(modry, modry_rect.topleft)
        screen.blit(cerveny, cerveny_rect.topleft)

       
        # Aktualizace obrazovky
        pygame.display.flip()
        clock.tick(60)
